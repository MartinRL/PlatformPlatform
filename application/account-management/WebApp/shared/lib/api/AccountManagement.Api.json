{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "PlatformPlatform API",
    "version": "v1"
  },
  "paths": {
    "/api/account-management/authentication/login/start": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "PostApiAccountManagementAuthenticationLoginStart",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartLoginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-management/authentication/login/{id}/complete": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "PostApiAccountManagementAuthenticationLoginComplete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LoginId"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteLoginCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/authentication/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "PostApiAccountManagementAuthenticationLogout",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/authentication/refresh-authentication-tokens": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "PostApiAccountManagementAuthenticationRefreshAuthenticationTokens",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/signups/is-subdomain-free": {
      "get": {
        "tags": [
          "Signups"
        ],
        "operationId": "GetApiAccountManagementSignupsIsSubdomainFree",
        "parameters": [
          {
            "name": "Subdomain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-management/signups/start": {
      "post": {
        "tags": [
          "Signups"
        ],
        "operationId": "PostApiAccountManagementSignupsStart",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartSignupCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSignupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-management/signups/{id}/complete": {
      "post": {
        "tags": [
          "Signups"
        ],
        "operationId": "PostApiAccountManagementSignupsComplete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SignupId"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteSignupCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/tenants/{id}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "GetApiAccountManagementTenants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TenantId"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenants"
        ],
        "operationId": "PutApiAccountManagementTenants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TenantId"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "operationId": "DeleteApiAccountManagementTenants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TenantId"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiAccountManagementUsers",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "UserRole",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UserRole"
                }
              ]
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortableUserProperties"
            },
            "x-position": 3
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SortOrder"
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageOffset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiAccountManagementUsers",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiAccountManagementUsers2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "PutApiAccountManagementUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "DeleteApiAccountManagementUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/users/{id}/change-user-role": {
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "PutApiAccountManagementUsersChangeUserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/users/invite": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiAccountManagementUsersInvite",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/users/update-avatar": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiAccountManagementUsersUpdateAvatar",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/account-management/users/remove-avatar": {
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "DeleteApiAccountManagementUsersRemoveAvatar",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StartLoginResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "loginId": {
            "type": "string"
          },
          "validForSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StartLoginCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "LoginId": {
        "type": "string",
        "format": "login_{string}"
      },
      "StronglyTypedUlidOfLoginId": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StronglyTypedIdOfStringAndLoginId"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "StronglyTypedIdOfStringAndLoginId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompleteLoginCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "oneTimePassword": {
            "type": "string"
          }
        }
      },
      "StartSignupResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "signupId": {
            "type": "string"
          },
          "validForSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StartSignupCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subdomain": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "SignupId": {
        "type": "string",
        "format": "signup_{string}"
      },
      "StronglyTypedUlidOfSignupId": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StronglyTypedIdOfStringAndSignupId"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "StronglyTypedIdOfStringAndSignupId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompleteSignupCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "oneTimePassword": {
            "type": "string"
          }
        }
      },
      "TenantResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TenantState"
          }
        }
      },
      "TenantState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Trial",
          "Active",
          "Suspended"
        ],
        "enum": [
          "Trial",
          "Active",
          "Suspended"
        ]
      },
      "TenantId": {
        "type": "string"
      },
      "StronglyTypedIdOfStringAndTenantId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTenantCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "GetUsersResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "currentPageOffset": {
            "type": "integer",
            "format": "int32"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersResponseUserDto"
            }
          }
        }
      },
      "UsersResponseUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserRole": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Member",
          "Admin",
          "Owner"
        ],
        "enum": [
          "Member",
          "Admin",
          "Owner"
        ]
      },
      "SortableUserProperties": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "CreatedAt",
          "ModifiedAt",
          "Name",
          "Email",
          "Role"
        ],
        "enum": [
          "CreatedAt",
          "ModifiedAt",
          "Name",
          "Email",
          "Role"
        ]
      },
      "SortOrder": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Ascending",
          "Descending"
        ],
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserId": {
        "type": "string",
        "format": "usr_{string}"
      },
      "StronglyTypedUlidOfUserId": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StronglyTypedIdOfStringAndUserId"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "StronglyTypedIdOfStringAndUserId": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tenantId": {
            "$ref": "#/components/schemas/TenantId"
          },
          "email": {
            "type": "string"
          },
          "userRole": {
            "$ref": "#/components/schemas/UserRole"
          },
          "emailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "UpdateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ChangeUserRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userRole": {
            "$ref": "#/components/schemas/UserRole"
          }
        }
      },
      "InviteUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      }
    }
  }
}